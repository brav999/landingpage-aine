name: CI

on:
  push:
    branches: [homolog]
  pull_request:
    branches: [main]

jobs:
  sonarQube:
    runs-on: ubuntu-latest
    environment: Preview
    steps:
      - name: Checkout código
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout código
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright browsers
        run: npx playwright install --with-deps

      - name: Build the application
        run: npm run build

      - name: Run Playwright tests
        run: npx playwright test

      - name: TestDino Reporter
        env:
          TOKEN_DINO: ${{ secrets.TOKEN_DINO }}
        run: npx --yes tdpw path/to/json/report/directory --token=$TOKEN_DINO --upload-html  

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30
